function solution(maps) {
    let answer = -1;
    const N = maps.length;
    const M = maps[0].length;
    const MOVES = [
        [0, 1], // 우
        [1, 0], // 하
        [0, -1], // 좌
        [-1, 0] // 상
    ];
    const queue = [];
    queue.push([0, 0, 1]);
    maps[0][0] = 0;
    
    while (queue.length > 0) {
        const [row, col, count] = queue.shift();
        
        if (row === N-1 && col === M-1) {
            answer = count;
            break;
        }
        
        for (let i=0; i<MOVES.length; i++){
            const nextRow = row + MOVES[i][0];
            const nextCol = col + MOVES[i][1];
            
            if (nextRow >= 0 && nextCol >= 0 && nextRow < N && nextCol < M && maps[nextRow][nextCol] === 1) {
                queue.push([nextRow, nextCol, count+1]);
                maps[nextRow][nextCol] = 0;
            }
        }
    }
    return answer;
}